version: "3.8"
services:
  postgres:
    image: postgres:14-alpine
    restart: always
    networks:
      - invidious
    volumes:
      - ./db1:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
      - ./backup:/backup
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
    deploy:
      placement:
        constraints: [ node.role == manager ]
  app:
    image: quay.io/invidious/invidious:latest-arm64
    restart: always
    #volumes:
    #  - ./invidious-config.yml:/invidious/config/config.yml
    configs:
      - source: invidious.yml
        target: /invidious/config/config.yml
    networks:
      - invidious
    #ports:
    #  - 127.0.0.1:3000:3000
    environment:
      INVIDIOUS_CONFIG: |
        channel_threads: 1
        check_tables: true
        feed_threads: 1
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: postgres
          port: 5432
        full_refresh: false
        https_only: false
        domain:
      #  external_port: 443
    #healthcheck:
    #  test: wget -nv --tries=1 --spider http://127.0.0.1:3000/feed/trending || exit 1
    #  interval: 60s
    #  timeout: 5s
    #  retries: 2
    depends_on:
      - postgres
    deploy:
      placement:
        constraints: [ node.hostname == rpi4 ]

  apache:
    image: 192.168.0.2:5050/dedyms/apache:fcgid
    ports:
      - 8383:443
    configs:
      - source: apache.conf
        target: /etc/apache2/sites-available/000-default-ssl.conf
    networks:
      - invidious
    deploy:
      placement:
        constraints: [ node.hostname == rpi4 ]

networks:
  invidious:
    name: invidious

configs:
  apache.conf:
    file: ./000-default.conf
  invidious.yml:
    file: invidious-config.yml
